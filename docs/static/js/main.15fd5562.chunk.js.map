{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,mCACA,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOlB,SACG,uBACCO,KAAK,OACLC,MAAST,EACTU,SAnBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,e,+BCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECJuB,SAACA,GAExB,MAA0Bd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAdAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAKrB,CAACpB,IAEGqB,EDnB0BK,CAAY1B,GAAhCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACA,6BAAMpB,IACN,oBAAIgB,UAAU,mCAAd,SAAmDI,GAAW,aAC9D,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAESA,GADAA,EAAIC,aEZpBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,KAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OAEI,qCACA,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCf9B6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.15fd5562.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={ handleSubmit }>\r\n           <input \r\n            type=\"Text\"\r\n            value= { inputValue }\r\n            onChange={ handleInputChange }\r\n           />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=tygsTZHKLnBjppBa0fbF5e46sSu2tBm6`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        \r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url      \r\n        }\r\n        \r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGif(category);\r\n\r\n    return (\r\n        <>\r\n        <h2>{ category }</h2>\r\n        <h3 className='animate__animated animate__flash'>{ loading && 'Cargando' }</h3>\r\n        <div className='card-grid'>\r\n            {\r\n                images.map((img) => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        { ...img }/>\r\n                ))        \r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGif = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true,\r\n\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                    \r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","\r\nimport { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    return (\r\n\r\n        <>\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories } />\r\n        \r\n        <hr />\r\n        \r\n        <ol>\r\n            { \r\n                categories.map( category => (\r\n                    <GifGrid \r\n                        key={ category }\r\n                        category={ category }\r\n                        />\r\n                ))\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}